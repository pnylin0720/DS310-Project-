{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "team0003"
        },
        "AzureBlobStorage1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
        },
        "AzureDataLakeStorage1_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
        },
        "AzureSqlDatabase1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
        },
        "AzureSqlDatabase2_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
        },
        "AzureSqlDatabase3_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase3'"
        },
        "AzureSqlDatabase4_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase4'"
        },
        "AzureSqlDatabasemetric_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureSqlDatabasemetric'"
        },
        "CosmosDbNoSql1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'CosmosDbNoSql1'"
        },
        "CosmosDbPolicyDataJson_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'CosmosDbPolicyDataJson'"
        },
        "SqlServer1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'SqlServer1'"
        },
        "SqlServer2_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'SqlServer2'"
        },
        "AzureDataLakeStorage1_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://team0003.dfs.core.windows.net/"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/CosmosDBCopy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "CosmosDbSqlApiSource",
                                "preferredRegions": []
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "$['CountryName']"
                                        },
                                        "sink": {
                                            "name": "CountryName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['CountryCode']"
                                        },
                                        "sink": {
                                            "name": "CountryCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Jurisdiction']"
                                        },
                                        "sink": {
                                            "name": "Jurisdiction",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Date']"
                                        },
                                        "sink": {
                                            "name": "Date",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C1_School closing']"
                                        },
                                        "sink": {
                                            "name": "C1SchoolClosing",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C1_Flag']"
                                        },
                                        "sink": {
                                            "name": "C1Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C2_Workplace closing']"
                                        },
                                        "sink": {
                                            "name": "C2WorkplaceClosing",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C2_Flag']"
                                        },
                                        "sink": {
                                            "name": "C2Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C3_Cancel public events']"
                                        },
                                        "sink": {
                                            "name": "C3CancelPublicEvents",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C3_Flag']"
                                        },
                                        "sink": {
                                            "name": "C3Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C4_Restrictions on gatherings']"
                                        },
                                        "sink": {
                                            "name": "C4RestrictionsOnGathering",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C4_Flag']"
                                        },
                                        "sink": {
                                            "name": "C4_Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C5_Close public transport']"
                                        },
                                        "sink": {
                                            "name": "C5_Closepublictransport",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C5_Flag']"
                                        },
                                        "sink": {
                                            "name": "C5_Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C6_Stay at home requirements']"
                                        },
                                        "sink": {
                                            "name": "C6Stayathomerequirements",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C6_Flag']"
                                        },
                                        "sink": {
                                            "name": "C6Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C7_Restrictions on internal movement']"
                                        },
                                        "sink": {
                                            "name": "C7Restrictionsoninternalmovement",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C7_Flag']"
                                        },
                                        "sink": {
                                            "name": "C7Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C8_International travel controls']"
                                        },
                                        "sink": {
                                            "name": "C8Internationaltravelcontrols",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E1_Income support']"
                                        },
                                        "sink": {
                                            "name": "E1Incomesupport",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E1_Flag']"
                                        },
                                        "sink": {
                                            "name": "E1Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E2_Debt contract relief']"
                                        },
                                        "sink": {
                                            "name": "E2_Debtcontractrelief",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E3_Fiscal measures']"
                                        },
                                        "sink": {
                                            "name": "E3Fiscalmeasures",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E4_International support']"
                                        },
                                        "sink": {
                                            "name": "E4Internationalsupport",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H1_Public information campaigns']"
                                        },
                                        "sink": {
                                            "name": "H1Publicinformationcampaigns",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H1_Flag']"
                                        },
                                        "sink": {
                                            "name": "H1Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H2_Testing policy']"
                                        },
                                        "sink": {
                                            "name": "H2Testingpolicy",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H3_Contact tracing']"
                                        },
                                        "sink": {
                                            "name": "H3Contacttracing",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H4_Emergency investment in healthcare']"
                                        },
                                        "sink": {
                                            "name": "H4Emergencyinvestmentinhealthcare",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H5_Investment in vaccines']"
                                        },
                                        "sink": {
                                            "name": "H5Investmentinvaccines",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H6_Facial Coverings']"
                                        },
                                        "sink": {
                                            "name": "H6FacialCoverings",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H6_Flag']"
                                        },
                                        "sink": {
                                            "name": "H6Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H7_Vaccination policy']"
                                        },
                                        "sink": {
                                            "name": "H7Vaccinationpolicy",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H7_Flag']"
                                        },
                                        "sink": {
                                            "name": "H7Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H8_Protection of elderly people']"
                                        },
                                        "sink": {
                                            "name": "H8Protectionofelderlypeople",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H8_Flag']"
                                        },
                                        "sink": {
                                            "name": "H8Flag",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['M1_Wildcard']"
                                        },
                                        "sink": {
                                            "name": "M1Wildcard"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyIndex']"
                                        },
                                        "sink": {
                                            "name": "StringencyIndex",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "StringencyIndexForDisplay",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyLegacyIndex']"
                                        },
                                        "sink": {
                                            "name": "StringencyLegacyIndex",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyLegacyIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "StringencyLegacyIndexForDisplay",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['GovernmentResponseIndex']"
                                        },
                                        "sink": {
                                            "name": "GovernmentResponseIndex",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['GovernmentResponseIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "GovernmentResponseIndexForDisplay",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['ContainmentHealthIndex']"
                                        },
                                        "sink": {
                                            "name": "ContainmentHealthIndex",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['ContainmentHealthIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "ContainmentHealthIndexForDisplay",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['EconomicSupportIndex']"
                                        },
                                        "sink": {
                                            "name": "EconomicSupportIndex",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['EconomicSupportIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "EconomicSupportIndexForDisplay",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_etag']"
                                        },
                                        "sink": {
                                            "name": "_etag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_attachments']"
                                        },
                                        "sink": {
                                            "name": "_attachments",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_ts']"
                                        },
                                        "sink": {
                                            "name": "_ts",
                                            "type": "Int64"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CosmosDbNoSqlContainer1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet3",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-03T13:33:55Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer1')]",
                "[concat(variables('factoryId'), '/datasets/Parquet3')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MetricsCombiner')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data flow1",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dataflow3",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "source1": {},
                                    "source2": {},
                                    "sink1": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-17T13:28:06Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/dataflow3')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MetricstoDeaths_Recoveries_Cases')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data flow1",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dataflow1",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "source1": {},
                                    "source2": {},
                                    "sink1": {},
                                    "sink2": {},
                                    "sink3": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-04T22:59:18Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/dataflow1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PolicyToODS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "ParquetReadSettings"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "CountryName",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "CountryName",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CountryCode",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "CountryCode",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Jurisdiction",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "Jurisdiction",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Date",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "Date",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C1SchoolClosing",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C1SchoolClosing",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C1Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C1Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C2WorkplaceClosing",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C2WorkplaceClosing",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C2Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C2Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C3CancelPublicEvents",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C3CancelPublicEvents",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C3Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C3Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C4RestrictionsOnGathering",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C4RestrictionsOnGathering",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C4_Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C4_Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C5_Closepublictransport",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C5_Closepublictransport",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C5_Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C5_Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C6Stayathomerequirements",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C6Stayathomerequirements",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C6Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C6Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C7Restrictionsoninternalmovement",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C7Restrictionsoninternalmovement",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C7Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C7Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "C8Internationaltravelcontrols",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "C8Internationaltravelcontrols",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "E1Incomesupport",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "E1Incomesupport",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "E1Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "E1Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "E2_Debtcontractrelief",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "E2_Debtcontractrelief",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "E3Fiscalmeasures",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "E3Fiscalmeasures",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "E4Internationalsupport",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "E4Internationalsupport",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H1Publicinformationcampaigns",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H1Publicinformationcampaigns",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H1Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H1Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H2Testingpolicy",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H2Testingpolicy",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H3Contacttracing",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H3Contacttracing",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H4Emergencyinvestmentinhealthcare",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H4Emergencyinvestmentinhealthcare",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H5Investmentinvaccines",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H5Investmentinvaccines",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H6FacialCoverings",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H6FacialCoverings",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H6Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H6Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H7Vaccinationpolicy",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H7Vaccinationpolicy",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H7Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H7Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H8Protectionofelderlypeople",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H8Protectionofelderlypeople",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "H8Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "H8Flag",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "M1Wildcard",
                                            "type": "Int64",
                                            "physicalType": "INT64"
                                        },
                                        "sink": {
                                            "name": "M1Wildcard",
                                            "type": "Int64",
                                            "physicalType": "INT_64"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StringencyIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "StringencyIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StringencyIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "StringencyIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StringencyLegacyIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "StringencyLegacyIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "StringencyLegacyIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "StringencyLegacyIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GovernmentResponseIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "GovernmentResponseIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "GovernmentResponseIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "GovernmentResponseIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ContainmentHealthIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "ContainmentHealthIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ContainmentHealthIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "ContainmentHealthIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EconomicSupportIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "EconomicSupportIndex",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EconomicSupportIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL",
                                            "scale": 18,
                                            "precision": 38
                                        },
                                        "sink": {
                                            "name": "EconomicSupportIndexForDisplay",
                                            "type": "Decimal",
                                            "physicalType": "DECIMAL"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "id",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "_etag",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "_etag",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "_attachments",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        },
                                        "sink": {
                                            "name": "_attachments",
                                            "type": "String",
                                            "physicalType": "UTF8"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "_ts",
                                            "type": "Int64",
                                            "physicalType": "INT64"
                                        },
                                        "sink": {
                                            "name": "_ts",
                                            "type": "Int64",
                                            "physicalType": "INT_64"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "Parquet3",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet10",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-04T21:24:49Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Parquet3')]",
                "[concat(variables('factoryId'), '/datasets/Parquet10')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Country",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSqlTable1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet2",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Metrics",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSqlTable1_copy1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet2",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Dates",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSqlTable1_copy2",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet2",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-03-28T01:59:59Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
                "[concat(variables('factoryId'), '/datasets/Parquet2')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlTable1_copy1')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlTable1_copy2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline2')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy Country",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerCountry",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Copy Metrics",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerTable1Covid19_Metrics",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Copy date",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSqlTable1_copy2",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-03-27T20:39:22Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerCountry')]",
                "[concat(variables('factoryId'), '/datasets/Parquet1')]",
                "[concat(variables('factoryId'), '/datasets/SqlServerTable1Covid19_Metrics')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlTable1_copy2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline3')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "dataflow2",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dataflow2",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "VMcountry": {},
                                    "VMdates": {},
                                    "sink1": {},
                                    "sink2": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerTable1Dates",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Dates",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Copy data2",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerCountry",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Geography",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-07T22:53:31Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/dataflow2')]",
                "[concat(variables('factoryId'), '/datasets/SqlServerTable1Dates')]",
                "[concat(variables('factoryId'), '/datasets/Dates')]",
                "[concat(variables('factoryId'), '/datasets/SqlServerCountry')]",
                "[concat(variables('factoryId'), '/datasets/Geography')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline4')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Data flow1",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dataflow4",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "source1": {},
                                    "source2": {},
                                    "sink1": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-20T19:18:27Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/dataflow4')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/vmsql')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Country Vm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerTable1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "countryvm",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "metricvm",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerTable2metric",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "Parquet12",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "dates",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerTabledates",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "datesvm",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-17T02:34:53Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
                "[concat(variables('factoryId'), '/datasets/countryvm')]",
                "[concat(variables('factoryId'), '/datasets/SqlServerTable2metric')]",
                "[concat(variables('factoryId'), '/datasets/Parquet12')]",
                "[concat(variables('factoryId'), '/datasets/SqlServerTabledates')]",
                "[concat(variables('factoryId'), '/datasets/datesvm')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "Country",
                        "type": "varchar"
                    },
                    {
                        "name": "CountryCode",
                        "type": "varchar"
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Country"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlTable1_copy1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "Country",
                        "type": "varchar"
                    },
                    {
                        "name": "CountryCode",
                        "type": "varchar"
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Covid19_Metrics"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlTable1_copy2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "Country",
                        "type": "varchar"
                    },
                    {
                        "name": "CountryCode",
                        "type": "varchar"
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Dates"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Updated",
                        "type": "date"
                    },
                    {
                        "name": "Confirmed",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "varchar"
                    },
                    {
                        "name": "ISO3",
                        "type": "varchar"
                    },
                    {
                        "name": "Country_Region",
                        "type": "varchar"
                    },
                    {
                        "name": "load_time",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Covid19_Metrics"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Updated",
                        "type": "date"
                    },
                    {
                        "name": "Confirmed",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "varchar"
                    },
                    {
                        "name": "ISO3",
                        "type": "varchar"
                    },
                    {
                        "name": "Country_Region",
                        "type": "varchar"
                    },
                    {
                        "name": "load_time",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Covid19_Metrics"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabasemetric",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Updated",
                        "type": "date"
                    },
                    {
                        "name": "Confirmed",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "varchar"
                    },
                    {
                        "name": "ISO3",
                        "type": "varchar"
                    },
                    {
                        "name": "Country_Region",
                        "type": "varchar"
                    },
                    {
                        "name": "load_time",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Covid19_Metrics"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabasemetric')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Cases')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Cases.parquet",
                        "folderPath": "Cases",
                        "fileSystem": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CosmosDbPolicyDataJson",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "CosmosDbSqlApiCollection",
                "schema": {
                    "type": "object",
                    "properties": {
                        "CountryName": {
                            "type": "string"
                        },
                        "CountryCode": {
                            "type": "string"
                        },
                        "RegionName": {
                            "type": "null"
                        },
                        "RegionCode": {
                            "type": "null"
                        },
                        "Jurisdiction": {
                            "type": "string"
                        },
                        "Date": {
                            "type": "string"
                        },
                        "C1_School closing": {
                            "type": "integer"
                        },
                        "C1_Flag": {
                            "type": "integer"
                        },
                        "C2_Workplace closing": {
                            "type": "integer"
                        },
                        "C2_Flag": {
                            "type": "integer"
                        },
                        "C3_Cancel public events": {
                            "type": "integer"
                        },
                        "C3_Flag": {
                            "type": "integer"
                        },
                        "C4_Restrictions on gatherings": {
                            "type": "integer"
                        },
                        "C4_Flag": {
                            "type": "integer"
                        },
                        "C5_Close public transport": {
                            "type": "integer"
                        },
                        "C5_Flag": {
                            "type": "integer"
                        },
                        "C6_Stay at home requirements": {
                            "type": "integer"
                        },
                        "C6_Flag": {
                            "type": "integer"
                        },
                        "C7_Restrictions on internal movement": {
                            "type": "integer"
                        },
                        "C7_Flag": {
                            "type": "integer"
                        },
                        "C8_International travel controls": {
                            "type": "integer"
                        },
                        "E1_Income support": {
                            "type": "integer"
                        },
                        "E1_Flag": {
                            "type": "integer"
                        },
                        "E2_Debt contract relief": {
                            "type": "integer"
                        },
                        "E3_Fiscal measures": {
                            "type": "integer"
                        },
                        "E4_International support": {
                            "type": "integer"
                        },
                        "H1_Public information campaigns": {
                            "type": "integer"
                        },
                        "H1_Flag": {
                            "type": "integer"
                        },
                        "H2_Testing policy": {
                            "type": "integer"
                        },
                        "H3_Contact tracing": {
                            "type": "integer"
                        },
                        "H4_Emergency investment in healthcare": {
                            "type": "integer"
                        },
                        "H5_Investment in vaccines": {
                            "type": "integer"
                        },
                        "H6_Facial Coverings": {
                            "type": "integer"
                        },
                        "H6_Flag": {
                            "type": "integer"
                        },
                        "H7_Vaccination policy": {
                            "type": "integer"
                        },
                        "H7_Flag": {
                            "type": "integer"
                        },
                        "H8_Protection of elderly people": {
                            "type": "integer"
                        },
                        "H8_Flag": {
                            "type": "integer"
                        },
                        "M1_Wildcard": {
                            "type": "integer"
                        },
                        "StringencyIndex": {
                            "type": "integer"
                        },
                        "StringencyIndexForDisplay": {
                            "type": "integer"
                        },
                        "StringencyLegacyIndex": {
                            "type": "integer"
                        },
                        "StringencyLegacyIndexForDisplay": {
                            "type": "integer"
                        },
                        "GovernmentResponseIndex": {
                            "type": "integer"
                        },
                        "GovernmentResponseIndexForDisplay": {
                            "type": "integer"
                        },
                        "ContainmentHealthIndex": {
                            "type": "integer"
                        },
                        "ContainmentHealthIndexForDisplay": {
                            "type": "integer"
                        },
                        "EconomicSupportIndex": {
                            "type": "integer"
                        },
                        "EconomicSupportIndexForDisplay": {
                            "type": "integer"
                        }
                    }
                },
                "typeProperties": {
                    "collectionName": "covidpolicy"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/CosmosDbPolicyDataJson')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CountryParquetVMSQL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Country.parquet",
                        "fileSystem": "vmsqlserver"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "Country",
                        "type": "UTF8"
                    },
                    {
                        "name": "CountryCode",
                        "type": "UTF8"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CountrySQL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Country.parquet",
                        "fileSystem": "sqldb"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "Country",
                        "type": "UTF8"
                    },
                    {
                        "name": "CountryCode",
                        "type": "UTF8"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Dates')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Dates.parquet",
                        "folderPath": "Dates",
                        "fileSystem": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Deaths')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Deaths.parquet",
                        "folderPath": "Deaths",
                        "fileSystem": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "sqldb"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "CountryName",
                        "type": "String"
                    },
                    {
                        "name": "CountryCode",
                        "type": "String"
                    },
                    {
                        "name": "Jurisdiction",
                        "type": "String"
                    },
                    {
                        "name": "Date",
                        "type": "String"
                    },
                    {
                        "name": "C1_School closing",
                        "type": "String"
                    },
                    {
                        "name": "C1_Flag",
                        "type": "String"
                    },
                    {
                        "name": "C2_Workplace closing",
                        "type": "String"
                    },
                    {
                        "name": "C2_Flag",
                        "type": "String"
                    },
                    {
                        "name": "C3_Cancel public events",
                        "type": "String"
                    },
                    {
                        "name": "C3_Flag",
                        "type": "String"
                    },
                    {
                        "name": "C4_Restrictions on gatherings",
                        "type": "String"
                    },
                    {
                        "name": "C4_Flag",
                        "type": "String"
                    },
                    {
                        "name": "C5_Close public transport",
                        "type": "String"
                    },
                    {
                        "name": "C5_Flag",
                        "type": "String"
                    },
                    {
                        "name": "C6_Stay at home requirements",
                        "type": "String"
                    },
                    {
                        "name": "C6_Flag",
                        "type": "String"
                    },
                    {
                        "name": "C7_Restrictions on internal movement",
                        "type": "String"
                    },
                    {
                        "name": "C7_Flag",
                        "type": "String"
                    },
                    {
                        "name": "C8_International travel controls",
                        "type": "String"
                    },
                    {
                        "name": "E1_Income support",
                        "type": "String"
                    },
                    {
                        "name": "E1_Flag",
                        "type": "String"
                    },
                    {
                        "name": "E2_Debt contract relief",
                        "type": "String"
                    },
                    {
                        "name": "E3_Fiscal measures",
                        "type": "String"
                    },
                    {
                        "name": "E4_International support",
                        "type": "String"
                    },
                    {
                        "name": "H1_Public information campaigns",
                        "type": "String"
                    },
                    {
                        "name": "H1_Flag",
                        "type": "String"
                    },
                    {
                        "name": "H2_Testing policy",
                        "type": "String"
                    },
                    {
                        "name": "H3_Contact tracing",
                        "type": "String"
                    },
                    {
                        "name": "H4_Emergency investment in healthcare",
                        "type": "String"
                    },
                    {
                        "name": "H5_Investment in vaccines",
                        "type": "String"
                    },
                    {
                        "name": "H6_Facial Coverings",
                        "type": "String"
                    },
                    {
                        "name": "H6_Flag",
                        "type": "String"
                    },
                    {
                        "name": "H7_Vaccination policy",
                        "type": "String"
                    },
                    {
                        "name": "H7_Flag",
                        "type": "String"
                    },
                    {
                        "name": "H8_Protection of elderly people",
                        "type": "String"
                    },
                    {
                        "name": "H8_Flag",
                        "type": "String"
                    },
                    {
                        "name": "M1_Wildcard",
                        "type": "String"
                    },
                    {
                        "name": "StringencyIndex",
                        "type": "String"
                    },
                    {
                        "name": "StringencyIndexForDisplay",
                        "type": "String"
                    },
                    {
                        "name": "StringencyLegacyIndex",
                        "type": "String"
                    },
                    {
                        "name": "StringencyLegacyIndexForDisplay",
                        "type": "String"
                    },
                    {
                        "name": "GovernmentResponseIndex",
                        "type": "String"
                    },
                    {
                        "name": "GovernmentResponseIndexForDisplay",
                        "type": "String"
                    },
                    {
                        "name": "ContainmentHealthIndex",
                        "type": "String"
                    },
                    {
                        "name": "ContainmentHealthIndexForDisplay",
                        "type": "String"
                    },
                    {
                        "name": "EconomicSupportIndex",
                        "type": "String"
                    },
                    {
                        "name": "EconomicSupportIndexForDisplay",
                        "type": "String"
                    },
                    {
                        "name": "id",
                        "type": "String"
                    },
                    {
                        "name": "_etag",
                        "type": "String"
                    },
                    {
                        "name": "_attachments",
                        "type": "String"
                    },
                    {
                        "name": "_ts",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/FinalDates')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Dates.parquet",
                        "folderPath": "Dates",
                        "fileSystem": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "DateKey",
                        "type": "INT32"
                    },
                    {
                        "name": "FullDate",
                        "type": "DATE"
                    },
                    {
                        "name": "isWeekDay",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "DayOfWeek",
                        "type": "INT32"
                    },
                    {
                        "name": "DayOfMonth",
                        "type": "INT32"
                    },
                    {
                        "name": "DayOfQuarter",
                        "type": "INT32"
                    },
                    {
                        "name": "DayOfYear",
                        "type": "INT32"
                    },
                    {
                        "name": "DayName",
                        "type": "UTF8"
                    },
                    {
                        "name": "WeekOfYear",
                        "type": "INT32"
                    },
                    {
                        "name": "WeekName",
                        "type": "UTF8"
                    },
                    {
                        "name": "MonthOfYear",
                        "type": "INT32"
                    },
                    {
                        "name": "MonthName",
                        "type": "UTF8"
                    },
                    {
                        "name": "CalendarQuarter",
                        "type": "INT32"
                    },
                    {
                        "name": "CalendarQuarterName",
                        "type": "UTF8"
                    },
                    {
                        "name": "CalendarYear",
                        "type": "INT32"
                    },
                    {
                        "name": "FiscalMonth",
                        "type": "INT32"
                    },
                    {
                        "name": "FiscalMonthName",
                        "type": "UTF8"
                    },
                    {
                        "name": "FiscalQuarter",
                        "type": "INT32"
                    },
                    {
                        "name": "FiscalQuarterName",
                        "type": "UTF8"
                    },
                    {
                        "name": "FiscalYear",
                        "type": "INT32"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Geography')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Geography.parquet",
                        "folderPath": "Geography",
                        "fileSystem": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Json1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "sqldb"
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Metrics')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MetricsSQL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Covid19_Metrics.parquet",
                        "fileSystem": "sqldb"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MetricsVM')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Covid19_Metrics.parquet",
                        "fileSystem": "newvm"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "vmsqlserver"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet10')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "Policy.parquet",
                        "folderPath": "Policy",
                        "container": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet11')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Covid19_Metrics.parquet",
                        "fileSystem": "vmsqlserver"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet12')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "newvm"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "Country",
                        "type": "UTF8"
                    },
                    {
                        "name": "CountryCode",
                        "type": "UTF8"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet13')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "sqldb"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "CountryMetrics.parquet",
                        "fileSystem": "countrydata"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet4')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet6')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "dbo.Covid19_Metrics.parquet",
                        "container": "vmsqlserver"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet7')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "dbo.Covid19_Metrics.parquet",
                        "container": "sqldb"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet8')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Parquet9')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "container": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Recoveries')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Recoveries.parquet",
                        "folderPath": "Recoveries",
                        "fileSystem": "ods"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerCountry')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Country"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "Country",
                        "type": "varchar"
                    },
                    {
                        "name": "CountryCode",
                        "type": "varchar"
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Country"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable1Covid19_Metrics')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Covid19_Metrics"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable1Dates')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Dates"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable2country')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "Country",
                        "type": "varchar"
                    },
                    {
                        "name": "CountryCode",
                        "type": "varchar"
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Country"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable2metric')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Updated",
                        "type": "date"
                    },
                    {
                        "name": "Confirmed",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "varchar"
                    },
                    {
                        "name": "ISO3",
                        "type": "varchar"
                    },
                    {
                        "name": "Country_Region",
                        "type": "varchar"
                    },
                    {
                        "name": "load_time",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Covid19_Metrics"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTabledates')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer2",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "DateKey",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FullDate",
                        "type": "date"
                    },
                    {
                        "name": "isWeekDay",
                        "type": "bit"
                    },
                    {
                        "name": "DayOfWeek",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfMonth",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayName",
                        "type": "varchar"
                    },
                    {
                        "name": "WeekOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "WeekName",
                        "type": "varchar"
                    },
                    {
                        "name": "MonthOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MonthName",
                        "type": "varchar"
                    },
                    {
                        "name": "CalendarQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CalendarQuarterName",
                        "type": "varchar"
                    },
                    {
                        "name": "CalendarYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalMonth",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalMonthName",
                        "type": "varchar"
                    },
                    {
                        "name": "FiscalQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalQuarterName",
                        "type": "varchar"
                    },
                    {
                        "name": "FiscalYear",
                        "type": "int",
                        "precision": 10
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Dates"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/countryvm')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "newvm"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/datesvm')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "newvm"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "Country",
                        "type": "UTF8"
                    },
                    {
                        "name": "CountryCode",
                        "type": "UTF8"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/sqlmetric')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "newvm"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('AzureDataLakeStorage1_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase3')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('AzureSqlDatabase3_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase4')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('AzureSqlDatabase4_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabasemetric')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('AzureSqlDatabasemetric_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CosmosDbNoSql1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "CosmosDb",
                "typeProperties": {
                    "connectionString": "[parameters('CosmosDbNoSql1_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CosmosDbPolicyDataJson')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "CosmosDb",
                "typeProperties": {
                    "connectionString": "[parameters('CosmosDbPolicyDataJson_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServer1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": "[parameters('SqlServer1_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServer2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": "[parameters('SqlServer2_connectionString')]"
                },
                "connectVia": {
                    "referenceName": "integrationRuntime1",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "typeProperties": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflow1')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "MetricsVM",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        },
                        {
                            "dataset": {
                                "referenceName": "MetricsSQL",
                                "type": "DatasetReference"
                            },
                            "name": "source2"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "Cases",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        },
                        {
                            "dataset": {
                                "referenceName": "Recoveries",
                                "type": "DatasetReference"
                            },
                            "name": "sink2"
                        },
                        {
                            "dataset": {
                                "referenceName": "Deaths",
                                "type": "DatasetReference"
                            },
                            "name": "sink3"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "union1"
                        },
                        {
                            "name": "Cases"
                        },
                        {
                            "name": "Recoveries"
                        },
                        {
                            "name": "Deaths"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet',",
                        "     partitionBy('hash', 1)) ~> source1",
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet',",
                        "     partitionBy('hash', 1)) ~> source2",
                        "source1, source2 union(byName: true)~> union1",
                        "union1 select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Confirmed,",
                        "          Confirmed_Change,",
                        "          Latitude,",
                        "          Longitude,",
                        "          ISO3,",
                        "          ISO2,",
                        "          Country_Region,",
                        "          load_time",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> Cases",
                        "union1 select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Recovered,",
                        "          Recovered_Change,",
                        "          Latitude,",
                        "          Longitude,",
                        "          ISO2,",
                        "          ISO3,",
                        "          Country_Region,",
                        "          load_time",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> Recoveries",
                        "union1 select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Deaths,",
                        "          Deaths_Change,",
                        "          Latitude,",
                        "          Longitude,",
                        "          ISO2,",
                        "          ISO3,",
                        "          Country_Region,",
                        "          load_time",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> Deaths",
                        "Cases sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['dbo.Cases.parquet'],",
                        "     truncate: true,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sink1",
                        "Recoveries sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['dbo.Recoveries.parquet'],",
                        "     truncate: true,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sink2",
                        "Deaths sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['dbo.Deaths.parquet'],",
                        "     truncate: true,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sink3"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/MetricsVM')]",
                "[concat(variables('factoryId'), '/datasets/MetricsSQL')]",
                "[concat(variables('factoryId'), '/datasets/Cases')]",
                "[concat(variables('factoryId'), '/datasets/Recoveries')]",
                "[concat(variables('factoryId'), '/datasets/Deaths')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflow2')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "CountryParquetVMSQL",
                                "type": "DatasetReference"
                            },
                            "name": "VMcountry"
                        },
                        {
                            "dataset": {
                                "referenceName": "CountryParquetVMSQL",
                                "type": "DatasetReference"
                            },
                            "name": "VMdates"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "Geography",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        },
                        {
                            "dataset": {
                                "referenceName": "Dates",
                                "type": "DatasetReference"
                            },
                            "name": "sink2"
                        }
                    ],
                    "transformations": [],
                    "scriptLines": [
                        "source(output(",
                        "          Country as string,",
                        "          CountryCode as string,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5)",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> VMcountry",
                        "source(output(",
                        "          Country as string,",
                        "          CountryCode as string,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5)",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> VMdates",
                        "VMcountry sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> sink1",
                        "VMdates sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> sink2"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/CountryParquetVMSQL')]",
                "[concat(variables('factoryId'), '/datasets/Geography')]",
                "[concat(variables('factoryId'), '/datasets/Dates')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflow3')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "MetricsVM",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        },
                        {
                            "dataset": {
                                "referenceName": "MetricsSQL",
                                "type": "DatasetReference"
                            },
                            "name": "source2"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "Metrics",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "union1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> source1",
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> source2",
                        "source1, source2 union(byName: true,",
                        "     partitionBy('hash', 1))~> union1",
                        "union1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO3 as string,",
                        "          ISO2 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     format: 'parquet',",
                        "     partitionFileNames:['dbo.Metrics.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sink1"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/MetricsVM')]",
                "[concat(variables('factoryId'), '/datasets/MetricsSQL')]",
                "[concat(variables('factoryId'), '/datasets/Metrics')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dataflow4')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "Metrics",
                                "type": "DatasetReference"
                            },
                            "name": "source1"
                        },
                        {
                            "dataset": {
                                "referenceName": "FinalDates",
                                "type": "DatasetReference"
                            },
                            "name": "source2"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "Parquet13",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "join1"
                        },
                        {
                            "name": "select1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO3 as string,",
                        "          ISO2 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet',",
                        "     partitionBy('hash', 1)) ~> source1",
                        "source(output(",
                        "          DateKey as integer,",
                        "          FullDate as date,",
                        "          isWeekDay as boolean,",
                        "          DayOfWeek as integer,",
                        "          DayOfMonth as integer,",
                        "          DayOfQuarter as integer,",
                        "          DayOfYear as integer,",
                        "          DayName as string,",
                        "          WeekOfYear as integer,",
                        "          WeekName as string,",
                        "          MonthOfYear as integer,",
                        "          MonthName as string,",
                        "          CalendarQuarter as integer,",
                        "          CalendarQuarterName as string,",
                        "          CalendarYear as integer,",
                        "          FiscalMonth as integer,",
                        "          FiscalMonthName as string,",
                        "          FiscalQuarter as integer,",
                        "          FiscalQuarterName as string,",
                        "          FiscalYear as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet',",
                        "     partitionBy('hash', 1)) ~> source2",
                        "source1, source2 join(Updated == FullDate,",
                        "     joinType:'inner',",
                        "     matchType:'exact',",
                        "     ignoreSpaces: false,",
                        "     broadcast: 'auto')~> join1",
                        "join1 select(mapColumn(",
                        "          ID,",
                        "          ISO3,",
                        "          Country_Region,",
                        "          DateKey,",
                        "          FullDate",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> select1",
                        "select1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     input(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO3 as string,",
                        "          ISO2 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     format: 'parquet',",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sink1"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Metrics')]",
                "[concat(variables('factoryId'), '/datasets/FinalDates')]",
                "[concat(variables('factoryId'), '/datasets/Parquet13')]"
            ]
        }
    ]
}